{"version":3,"file":"static/js/274.045359b7.chunk.js","mappings":"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","sources":["components/Movies/Movies.styled.js","webpack://goit-react-hw-05-movies/./src/components/Movies/movies.module.css?968c","components/Movies/Movies.jsx","components/Paginator/paginator.styled.js","components/Paginator/Paginator.jsx","shared/services/api.js"],"sourcesContent":["import defaultPoster from '../../img/no-poster-available.jpg';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const LinkToDetails = styled(Link)`\n  color: #000;\n  text-decoration: none;\n  margin: 1px;\n  &:hover,\n  &:focus {\n    color: #ff3cac;\n  }\n  @media screen and (min-width: 768px) {\n    &:hover::after,\n    &:focus::after {\n      content: '';\n      background-image: ${props =>\n        props.cover\n          ? `url('https://image.tmdb.org/t/p/w500/${props.cover}')`\n          : `url(${defaultPoster})`};\n      background-size: cover;\n      background-position: center;\n      background-repeat: no-repeat;\n      width: 160px;\n      height: 240px;\n      display: block;\n      border-radius: 4px;\n      border: 1px solid rgba(43, 134, 197);\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n      position: absolute;\n      top: -140px;\n      left: 500px;\n      z-index: 1;\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"movies_title__5EHmf\",\"wrap\":\"movies_wrap__KvAv7\",\"movieForm\":\"movies_movieForm__3MkRY\",\"movieInput\":\"movies_movieInput__3SULj\",\"btn\":\"movies_btn__aShtF\",\"list\":\"movies_list__qGO0R\",\"listItem\":\"movies_listItem__iC3Fa\",\"loading\":\"movies_loading__wawUQ\"};","import { useState, useEffect, useMemo } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { searchMovie } from '../../shared/services/api';\nimport { LinkToDetails } from './Movies.styled';\nimport css from './movies.module.css';\nimport Paginator from 'components/Paginator/Paginator';\nimport { MagnifyingGlass } from 'react-loader-spinner';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const [searchParams, setSearchParams] = useSearchParams({\n    page: 1,\n    query: '',\n  });\n\n  const [totalPages, settotalPages] = useState(0);\n  const location = useLocation();\n  const params = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n  const page = Number(params.page || 1);\n  const { query } = params;\n\n  const [inputValue, setInputValue] = useState(query || '');\n\n  useEffect(() => {\n    if (!query) return;\n    const getData = async () => {\n      try {\n        setLoading(true);\n        const { data } = await searchMovie(query, page);\n        setMovies(data.results);\n        setLoading(false);\n        settotalPages(data.total_pages);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getData();\n  }, [query, page]);\n\n  const handleChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const searchQuery = e.target.elements.search.value.trim();\n    if (searchQuery === '') {\n      e.target.reset();\n      return;\n    }\n    setSearchParams({ query: searchQuery, page: 1 });\n    e.target.reset();\n  };\n\n  return (\n    <>\n      <div className={css.wrap}>\n        <h2 className={css.title}>Search movies:</h2>\n        <form onSubmit={handleSubmit} className={css.movieForm}>\n          <input\n            value={inputValue}\n            onChange={handleChange}\n            name=\"search\"\n            type=\"text\"\n            placeholder=\"Type here\"\n            className={css.movieInput}\n          />\n          <button type=\"submit\" className={css.btn}>\n            Search\n          </button>\n        </form>\n      </div>\n      <ul className={css.list}>\n        {query ? (\n          loading ? (\n            <div className={css.loading}>\n              <MagnifyingGlass\n                visible={true}\n                height=\"80\"\n                width=\"80\"\n                ariaLabel=\"MagnifyingGlass-loading\"\n                wrapperStyle={{ margin: '0 auto' }}\n                wrapperClass=\"MagnifyingGlass-wrapper\"\n                glassColor=\"#c0efff\"\n                color=\"#e15b64\"\n              />\n            </div>\n          ) : movies?.length > 0 ? (\n            movies.map(({ title, id, poster_path }) => (\n              <li key={id} className={css.listItem}>\n                <LinkToDetails\n                  state={{ from: location }}\n                  to={`/movies/${id}`}\n                  cover={poster_path}\n                >\n                  {title}\n                </LinkToDetails>\n              </li>\n            ))\n          ) : (\n            <p>\n              No movies with this title were found. Try entering another title\n            </p>\n          )\n        ) : (\n          <p className={css.descr}></p>\n        )}\n      </ul>\n      <Paginator\n        totalPages={totalPages}\n        setSearchParams={setSearchParams}\n        params={params}\n        currentPage={Number(params?.page - 1) || 0}\n      />\n    </>\n  );\n};\n\nexport default Movies;\n","import styled from 'styled-components';\nimport ReactPaginate from 'react-paginate';\n\nexport const StyledPaginate = styled(ReactPaginate)`\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n  margin: 10px 0;\n  font-size: 18px;\n  .selected {\n    color: white;\n    background-color: orange;\n    &:hover {\n      background-color: orangered;\n    }\n  }\n\n  a {\n    display: block;\n    padding: 5px 10px;\n    cursor: pointer;\n  }\n\n  li {\n    list-style-type: none;\n    border: 1px solid orange;\n    border-radius: 7px;\n    &:hover {\n      background-color: orange;\n      color: #000;\n    }\n  }\n`;\n","import { StyledPaginate } from './paginator.styled';\nimport PropTypes from 'prop-types';\nimport { IoIosArrowBack, IoIosArrowForward } from 'react-icons/io';\n\nfunction Paginator({ totalPages, setSearchParams, params, currentPage }) {\n  const handlePageClick = event => {\n    // устанавливаю page= номеру страницы в URL\n    // передаем другие параметры из строки в url\n    setSearchParams({ ...params, page: event.selected + 1 });\n  };\n\n  return (\n    <>\n      <StyledPaginate\n        breakLabel=\"...\"\n        previousLabel={<IoIosArrowBack />}\n        nextLabel={<IoIosArrowForward />}\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={4}\n        marginPagesDisplayed={2}\n        pageCount={totalPages}\n        renderOnZeroPageCount={null}\n        forcePage={currentPage}\n      />\n    </>\n  );\n}\n\nPaginator.propTypes = {\n  totalPages: PropTypes.number.isRequired,\n  setSearchParams: PropTypes.func.isRequired,\n  params: PropTypes.object.isRequired,\n  currentPage: PropTypes.number.isRequired,\n};\n\nexport default Paginator;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '432ccaf7113b52e993b924f1fb358945',\n    language: 'en-US',\n  },\n});\n\nexport async function getTrendingMovies(page) {\n  const query = `/trending/movie/week`;\n  try {\n    const { data } = await instance.get(query, {\n      params: {\n        page,\n      },\n    });\n\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieDetails(id) {\n  const query = `/movie/${id}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieCast(id) {\n  const query = `/movie/${id}/credits`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieReviews(id) {\n  const query = `/movie/${id}/reviews`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function searchMovie(queryString, page) {\n  const query = `/search/movie?query=${queryString}`;\n  try {\n    const data = await instance.get(query, {\n      params: {\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n"],"names":["LinkToDetails","styled","Link","props","cover","defaultPoster","useState","movies","setMovies","loading","setLoading","useSearchParams","page","query","searchParams","setSearchParams","totalPages","settotalPages","location","useLocation","params","useMemo","Object","fromEntries","Number","inputValue","setInputValue","useEffect","getData","searchMovie","data","results","total_pages","console","log","className","css","onSubmit","e","preventDefault","searchQuery","target","elements","search","value","trim","reset","onChange","name","type","placeholder","visible","height","width","ariaLabel","wrapperStyle","margin","wrapperClass","glassColor","color","length","map","title","id","poster_path","state","from","to","Paginator","currentPage","StyledPaginate","ReactPaginate","breakLabel","previousLabel","nextLabel","onPageChange","event","selected","pageRangeDisplayed","marginPagesDisplayed","pageCount","renderOnZeroPageCount","forcePage","instance","axios","baseURL","api_key","language","getTrendingMovies","get","getMovieDetails","getMovieCast","getMovieReviews","queryString"],"sourceRoot":""}