{"version":3,"file":"static/js/802.7003196e.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetails/movieDetails.module.css?f136","components/MovieDetails/MovieDetails.jsx","shared/services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"movieDetails_img__jB64k\",\"imgWrap\":\"movieDetails_imgWrap__TicsT\",\"descrWrap\":\"movieDetails_descrWrap__S2jhO\",\"btn\":\"movieDetails_btn__M1CwD\",\"btnList\":\"movieDetails_btnList__+Pp3w\",\"castBtn\":\"movieDetails_castBtn__rkrAN\",\"reviewsBtn\":\"movieDetails_reviewsBtn__Zfhks\",\"descrTitle\":\"movieDetails_descrTitle__1j0yX\",\"loading\":\"movieDetails_loading__NfvCI\"};","import { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { getMovieDetails } from '../../shared/services/api';\nimport css from './movieDetails.module.css';\nimport noMovieImg from '../../img/no-poster-available.jpg';\nimport { MagnifyingGlass } from 'react-loader-spinner';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoading(true);\n        const data = await getMovieDetails(movieId);\n        setData(data);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getData();\n  }, [movieId]);\n\n  const getYear = releaseDate => {\n    const date = new Date(releaseDate);\n    return date.getFullYear();\n  };\n\n  const getGenres = arrGenres => {\n    return arrGenres.map(genre => genre.name).join(', ');\n  };\n\n  const location = useLocation();\n\n  const cameBack = location.state?.from ?? '/';\n\n  return (\n    <>\n      <Link className={css.btn} to={cameBack}>\n        Go Back\n      </Link>\n      {loading ? (\n        <div className={css.loading}>\n          <MagnifyingGlass\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"MagnifyingGlass-loading\"\n            wrapperStyle={{ margin: '0 auto' }}\n            wrapperClass=\"MagnifyingGlass-wrapper\"\n            glassColor=\"#c0efff\"\n            color=\"#e15b64\"\n          />\n        </div>\n      ) : (\n        <>\n          <div className={css.imgWrap}>\n            {data.poster_path ? (\n              <img\n                className={css.img}\n                alt={data.original_title}\n                src={`https://image.tmdb.org/t/p/w500${data.poster_path}`}\n              />\n            ) : (\n              <img className={css.img} src={noMovieImg} alt=\"not available\" />\n            )}\n\n            <div className={css.descrWrap}>\n              <h1>\n                {data.original_title} ({getYear(data.release_date)})\n              </h1>\n              <p className={css.descrTitle}>\n                User Score: {~~(data.vote_average * 10)}%\n              </p>\n              <p className={css.descrTitle}>Overview</p>\n              <p>{data.overview}</p>\n              <p className={css.descrTitle}>Genres</p>\n              <p>{getGenres(data.genres)}</p>\n            </div>\n          </div>\n          <div>\n            <ul className={css.btnList}>\n              <li>\n                <Link to=\"cast\" state={{ from: cameBack }}>\n                  <button className={css.castBtn}>Cast</button>\n                </Link>\n              </li>\n              <li>\n                <Link to=\"reviews\" state={{ from: cameBack }}>\n                  <button className={css.reviewsBtn}>Reviews</button>\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <Suspense\n            fallback={\n              <div className={css.loading}>\n                <MagnifyingGlass\n                  visible={true}\n                  height=\"80\"\n                  width=\"80\"\n                  ariaLabel=\"MagnifyingGlass-loading\"\n                  wrapperStyle={{ margin: '0 auto' }}\n                  wrapperClass=\"MagnifyingGlass-wrapper\"\n                  glassColor=\"#c0efff\"\n                  color=\"#e15b64\"\n                />\n              </div>\n            }\n          >\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '432ccaf7113b52e993b924f1fb358945',\n    language: 'en-US',\n  },\n});\n\nexport async function getTrendingMovies(page) {\n  const query = `/trending/movie/week`;\n  try {\n    const { data } = await instance.get(query, {\n      params: {\n        page,\n      },\n    });\n\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieDetails(id) {\n  const query = `/movie/${id}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieCast(id) {\n  const query = `/movie/${id}/credits`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieReviews(id) {\n  const query = `/movie/${id}/reviews`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function searchMovie(queryString, page) {\n  const query = `/search/movie?query=${queryString}`;\n  try {\n    const data = await instance.get(query, {\n      params: {\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n"],"names":["movieId","useParams","useState","data","setData","loading","setLoading","useEffect","getData","getMovieDetails","console","log","arrGenres","releaseDate","cameBack","useLocation","state","from","className","css","to","visible","height","width","ariaLabel","wrapperStyle","margin","wrapperClass","glassColor","color","poster_path","alt","original_title","src","noMovieImg","release_date","Date","getFullYear","vote_average","overview","genres","map","genre","name","join","Suspense","fallback","instance","axios","baseURL","params","api_key","language","getTrendingMovies","page","get","id","query","getMovieCast","getMovieReviews","searchMovie","queryString"],"sourceRoot":""}